{"version":3,"sources":["components/Header.js","assets/tic-tac-toe-bg-memo.jpg","components/BackgroundContainer.js","assets/circle.svg","assets/x-icon.svg","components/SquareIcon.js","components/Square.js","components/Squares.js","components/InitializeBtn.js","components/Score.js","components/Turn.js","components/ContestantScore.js","components/GameManage.js","components/WinnerFoter.js","components/WinnerContent.js","components/Winner.js","components/BoardContent.js","components/Board.js","App.js","index.js"],"names":["Header","React","memo","BackgroundContainer","className","src","bgImg","SquareIcon","squareDet","alt","xIcon","circleIcon","Square","squareClicked","onClick","Squares","squares","map","square","squareIndex","event","InitializeBtn","initializeGame","value","type","Score","xScore","oScore","Turn","turn","ContestantScore","GameManage","score","x","o","WinnerFoter","WinnerContent","winner","Winner","BoardContent","isGameOver","Board","useState","Array","fill","setSquares","setScore","setIsGameOver","turnCounter","setTurnCounter","setTurn","useMemo","possibilities","index","length","a","b","c","calculateWinner","useEffect","previousCounter","prevScore","preventDefault","copySquares","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d214a4d0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = React.memo(() => {\r\n    return (\r\n        <header >\r\n            <h1>Tic Tac Toe</h1>\r\n            <h3> Enjoy playing! </h3>\r\n        </header>\r\n    )\r\n});\r\n\r\n","export default __webpack_public_path__ + \"static/media/tic-tac-toe-bg-memo.860fd460.jpg\";","import React from 'react';\r\nimport bgImg from '../assets/tic-tac-toe-bg-memo.jpg';\r\nimport LazyLoad from 'react-lazy-load';\r\n\r\n\r\nexport const BackgroundContainer =React.memo(() => {\r\n    return(\r\n        <div className=\"background-container\">\r\n              <LazyLoad >\r\n                  <img src={bgImg}></img>\r\n              </LazyLoad>     \r\n        </div>\r\n    )\r\n});\r\n","export default __webpack_public_path__ + \"static/media/circle.1020cec2.svg\";","export default __webpack_public_path__ + \"static/media/x-icon.a474c10e.svg\";","import React  from \"react\";\r\nimport circleIcon from '../assets/circle.svg';\r\nimport xIcon from '../assets/x-icon.svg';\r\n\r\nexport const SquareIcon = React.memo(({squareDet}) =>{\r\n return (\r\n            <>\r\n                {\r\n                    squareDet==='x'?<img alt=\"x\" className={squareDet===null?'not-acitve':' active'} \r\n                    src={xIcon}/>:<img alt=\"o\" className={squareDet===null?'not-active':' active'} src={circleIcon}/>\r\n                    \r\n                }\r\n\r\n            </>\r\n    )\r\n})\r\n\r\n","import React from 'react';\r\nimport { SquareIcon } from './SquareIcon';\r\n\r\nexport const Square =({squareDet,squareClicked}) => {\r\n    return(\r\n        <>\r\n            <button  onClick={squareClicked} >\r\n                <SquareIcon squareDet={squareDet}/>\r\n            </button>\r\n        </>\r\n    )\r\n};","import React from \"react\";\r\nimport {Square} from './Square';\r\n\r\nexport const Squares = ({squareClicked, squares}) => {\r\n    return(\r\n        <div className=\"squares\">    \r\n            {squares.map((square,squareIndex)=>{\r\n            return (\r\n                        <Square key={squareIndex}  squareDet={square} squareClicked={event=>squareClicked(event,squareIndex) }/>\r\n                    )\r\n            })}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport const  InitializeBtn = ({initializeGame, value}) => {\r\n    return (\r\n        <button onClick={initializeGame} type=\"reset\" className=\"new-game-btn\">{value}</button>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Score =React.memo(({xScore,oScore}) => {\r\n    return(\r\n        <div className=\"score\">\r\n            <h3>Total score:</h3>\r\n            <p>{`X: ${xScore} Circle: ${oScore}`}</p>\r\n        </div>\r\n    )\r\n});\r\n","import React from 'react';\r\n\r\nexport const Turn =React.memo(({turn}) => {\r\n    return(\r\n        <>\r\n            <p>{`Next Player: ${(turn ? \"X\" : \"O\")} `}</p>\r\n        </>\r\n    )\r\n});\r\n","import React from 'react';\r\nimport {Score} from './Score';\r\nimport {Turn} from './Turn';\r\n\r\nexport const ContestantScore = React.memo(({xScore,oScore,turn}) => {\r\n    return (\r\n            <div className=\"contestant-score\">\r\n                <Score xScore={xScore} oScore={oScore}/>\r\n                <Turn turn={turn}/>\r\n            </div>\r\n        ) \r\n})\r\n\r\n","import React from 'react';\r\nimport {InitializeBtn} from './InitializeBtn';\r\nimport {ContestantScore} from './ContestantScore';\r\n\r\nexport const GameManage = ({score,turn,initializeGame}) => {\r\n    return (\r\n        <div className=\"game-manage\" >\r\n            <ContestantScore xScore={score.x} oScore={score.o} turn={turn}/>\r\n            <InitializeBtn value=\"Reset Game\" initializeGame={initializeGame}/>\r\n        </div>\r\n    ) \r\n}\r\n\r\n","import React from 'react';\r\nimport {InitializeBtn} from './InitializeBtn'\r\n\r\nexport const WinnerFoter =({initializeGame}) => {\r\n    return(\r\n        <div className='winner-foter'>\r\n                <p >Would you like to play another one?</p>\r\n                <InitializeBtn value=\"New Game\" initializeGame={initializeGame}/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport const WinnerContent =React.memo(({turn,winner}) => {\r\n    return(\r\n        <div>    \r\n            {winner?\r\n                    <>\r\n                        <h2>{`The Winner is ${(!turn ? \"X\" : \"Circle\")} `}</h2>\r\n                        <h2>\r\n                            {`Well done ${(!turn ? \"X!\" : \"Circle!\")}`}\r\n                        </h2>\r\n                    </>\r\n                :\r\n                    <h2>It`s a draw!</h2> \r\n            } \r\n        </div>\r\n    )\r\n});","import React from 'react';\r\nimport {WinnerFoter} from  './WinnerFoter';\r\nimport {Score} from './Score';\r\nimport {WinnerContent} from './WinnerContent';\r\n\r\nexport const Winner = ({score,initializeGame,winner, turn}) => {\r\n    return (\r\n        <div className='winner-container'>    \r\n            <Score xScore={score.x} oScore={score.o}/>\r\n            <WinnerContent winner={winner} turn={turn}/>\r\n            <WinnerFoter  initializeGame={initializeGame}/>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n ","import React from 'react';\r\nimport {GameManage}  from './GameManage';\r\nimport  {Winner}  from './Winner';\r\n\r\nexport const BoardContent = ({score,isGameOver,winner,turn, initializeGame}) => {\r\n    return (\r\n        <>\r\n            {!isGameOver  && !winner\r\n                ?       \r\n                <GameManage score={score} winner={winner} turn={turn} initializeGame={initializeGame}/>\r\n                : \r\n                <Winner score={score} winner={winner} turn={turn} initializeGame={initializeGame}/>\r\n            }\r\n        </>\r\n    ) \r\n}\r\n\r\n","import React,{useState, useEffect,useCallback,useMemo} from 'react';\r\nimport {Squares} from './Squares';\r\nimport {BoardContent}  from './BoardContent';\r\n\r\nconst  calculateWinner =(squares => {\r\n  const possibilities = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let index = 0; index < possibilities.length; index++) {\r\n    const [a, b, c] = possibilities[index];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return  squares[a] ;            \r\n    }\r\n  }\r\n  return null;\r\n})\r\n\r\nconst Board = () => {\r\n    const[squares, setSquares] = useState(Array(9).fill(null))\r\n    const [score,setScore] = useState({\r\n      x:0,\r\n      o:0\r\n    })\r\n    const [isGameOver,setIsGameOver] = useState(false)\r\n    const [turnCounter, setTurnCounter] = useState(1)\r\n    const [turn, setTurn] = useState(true);\r\n  \r\n    const winner = useMemo(()=> calculateWinner(squares),[squares])\r\n    const squareClicked = (event,squareIndex) => {\r\n        event.preventDefault();\r\n        const copySquares = [...squares];\r\n        if(winner||copySquares[squareIndex]) return ; \r\n        copySquares[squareIndex]= turn?\"x\":'O'\r\n        setSquares(copySquares);\r\n        setTurn(!turn);\r\n    }\r\n    const initializeGame = () =>{\r\n        setSquares(Array(9).fill(null))\r\n        setIsGameOver(false);\r\n        setTurnCounter(1);\r\n    }\r\n    useEffect((()=>{\r\n      setTurnCounter(previousCounter=> previousCounter+1)\r\n      if(turnCounter>9){\r\n        setIsGameOver(true)\r\n      }\r\n    }),[squares])\r\n    useEffect(()=>{\r\n      if (turnCounter===1)return\r\n      !turn?setScore(prevScore=> ({...prevScore,x:prevScore.x+1})):setScore(prevScore=> ({...prevScore,o:prevScore.o+1}))\r\n    },[winner])\r\n    return (\r\n        <div className={winner?\"board-container win\":\"board-container\"}>\r\n                <BoardContent score={score} isGameOver={isGameOver} winner={winner} turn={turn} initializeGame={initializeGame}/>\r\n                <Squares squareClicked={squareClicked} squares={squares}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Board;","import {Header} from './components/Header';\nimport {BackgroundContainer} from './components/BackgroundContainer';\nimport Board from './components/Board';\nimport './App.css'\n\n\n\n\nconst App = () =>{\n\n  return (\n      <>\n        <BackgroundContainer/>\n        <div className=\"game-container\">\n          <Header/>\n          <Board/>\n        </div>\n      </> \n )}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}