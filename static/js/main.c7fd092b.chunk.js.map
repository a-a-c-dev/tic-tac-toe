{"version":3,"sources":["components/Header.js","assets/circle.svg","assets/x-icon.svg","components/Square.js","components/InitializeBtn.js","components/GameManage.js","components/Winner.js","components/Board.js","assets/tic-tac-toe-bg.jpg","App.js","index.js"],"names":["Header","Square","squareDet","squareClicked","onClick","alt","className","src","xIcon","circleIcon","InitializeBtn","initializeGame","type","GameManage","score","turn","x","o","Winner","winner","Board","useState","Array","fill","squares","setSquares","setScore","isGameOver","setIsGameOver","turnCounter","setTurnCounter","setTurn","possibilities","index","length","a","b","c","calculateWinner","useEffect","previousCounter","prevScore","map","square","squareIndex","event","preventDefault","copySquares","console","log","App","bgImg","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7fd092b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <header >\r\n            <h1>Tic Tac Toe<br/> game</h1>\r\n            <h3> Enjoy playing! </h3>\r\n        </header>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/circle.1020cec2.svg\";","export default __webpack_public_path__ + \"static/media/x-icon.a474c10e.svg\";","import React from 'react';\r\nimport circleIcon from '../assets/circle.svg';\r\nimport xIcon from '../assets/x-icon.svg';\r\n\r\nconst Square = ({squareDet,squareClicked}) => {\r\n    return(\r\n        <>\r\n            <button  onClick={squareClicked} >\r\n                {squareDet==='x'?<img alt=\"x\" className={squareDet===null?'not-acitve':' active'} src={xIcon}/>:<img alt=\"o\" className={squareDet===null?'not-active':' active'} src={circleIcon}/>}\r\n            </button>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default Square;","import React from 'react';\r\n\r\n\r\nexport const  InitializeBtn = ({initializeGame}) => {\r\n    return (\r\n        <button onClick={initializeGame} type=\"reset\" className=\"new-game-btn\">New Game</button>\r\n    )\r\n}","import React from 'react';\r\nimport {InitializeBtn} from './InitializeBtn';\r\n\r\nconst GameManage = ({score,turn,initializeGame}) => {\r\n    return (\r\n        <div className=\"game-manage\" >\r\n            <div className=\"contestant-score\">\r\n                <h3>Total score:</h3> \r\n                <p>\r\n                    {`X:${score.x} Circle:${score.o}`}\r\n                </p>\r\n                <p>\r\n                    { ` Next Player:  ${(turn ? \"X\" : \"O\")} `}\r\n                </p>\r\n            </div>\r\n            \r\n            <InitializeBtn initializeGame={initializeGame}/>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default GameManage;","import React from 'react';\r\nimport {InitializeBtn} from  './InitializeBtn';\r\n\r\n const Winner = ({score,initializeGame,winner, turn}) => {\r\n    return (\r\n        <div className='winner-container'>    \r\n          \r\n            {winner?\r\n                    <h2>{(!turn ? \"X\" : \"O\") + ' Is the winner Well done '  }     </h2>\r\n                :\r\n                     <h2>It`s a draw!</h2> \r\n            }\r\n            <h3>Total Score{`X:${score.x} Circle:${score.o}`}</h3>\r\n            <p>Would you like to play another one?</p>\r\n            <InitializeBtn initializeGame={initializeGame}/>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Winner;","import React,{useState, useEffect} from 'react';\r\nimport Square from './Square';\r\nimport GameManage  from './GameManage';\r\nimport  Winner  from './Winner';\r\n\r\nconst Board = () => {\r\n    const[squares, setSquares] = useState(Array(9).fill(null))\r\n    const [score,setScore] = useState({\r\n      x:0,\r\n      o:0\r\n    })\r\n    const [isGameOver,setIsGameOver] = useState(false)\r\n    const [turnCounter, setTurnCounter] = useState(1)\r\n    const [turn, setTurn] = useState(true);\r\n    const  calculateWinner = squares => {\r\n        const possibilities = [\r\n          [0, 1, 2],\r\n          [3, 4, 5],\r\n          [6, 7, 8],\r\n          [0, 3, 6],\r\n          [1, 4, 7],\r\n          [2, 5, 8],\r\n          [0, 4, 8],\r\n          [2, 4, 6],\r\n        ];\r\n        for (let index = 0; index < possibilities.length; index++) {\r\n          const [a, b, c] = possibilities[index];\r\n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return  squares[a] ;            \r\n          }\r\n        }\r\n        return null;\r\n    }\r\n    const winner = calculateWinner(squares);\r\n    const squareClicked = (event,squareIndex) => {\r\n        event.preventDefault();\r\n        const copySquares = [...squares];\r\n        if(winner||copySquares[squareIndex]) return ; \r\n        copySquares[squareIndex]= turn?\"x\":'O'\r\n        setSquares(copySquares);\r\n        setTurn(!turn);\r\n        console.log(turnCounter)\r\n    }\r\n    const initializeGame = () =>{\r\n        setSquares(Array(9).fill(null))\r\n        setIsGameOver(false);\r\n        setTurnCounter(1);\r\n    }\r\n\r\n    useEffect((()=>{\r\n      setTurnCounter(previousCounter=> previousCounter+1)\r\n      if(turnCounter>9){\r\n        setIsGameOver(true)\r\n      }\r\n    }),[squares])\r\n    useEffect(()=>{\r\n      if (turnCounter===1)return\r\n      !turn?setScore(prevScore=> ({...prevScore,x:prevScore.x+1})):setScore(prevScore=> ({...prevScore,o:prevScore.o+1}))\r\n    },[winner])\r\n    return (\r\n        <div className=\"board-container\">\r\n                {!isGameOver  && !winner\r\n                ?       \r\n                  <GameManage score={score} winner={winner} turn={turn} initializeGame={initializeGame}/>\r\n                : \r\n                  <Winner score={score} winner={winner} turn={turn} initializeGame={initializeGame}/>\r\n                }\r\n                <div className=\"squares\">    \r\n                      {squares.map((square,squareIndex)=>{\r\n                      return (\r\n                              <Square key={squareIndex}  squareDet={square} squareClicked={event=>squareClicked(event,squareIndex) }/>\r\n                              )\r\n                      })}\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Board;","export default __webpack_public_path__ + \"static/media/tic-tac-toe-bg.a8f6cff3.jpg\";","import {Header} from './components/Header';\nimport Board from './components/Board';\nimport bgImg from './assets/tic-tac-toe-bg.jpg';\nimport './App.css'\n\n\n\n\nconst App = () =>{\n\n  return (\n      <>\n        <div className=\"background-container\">\n          <img src={bgImg}></img>\n        </div>\n        <div className=\"game-container\">\n          <Header/>\n          <Board/>\n        </div>\n      </> \n )}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}